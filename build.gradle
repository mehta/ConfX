plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.11.0'
}

group = 'com.abhinavmehta'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '18'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core:10.11.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.11.0' // For PostgreSQL support in Flyway

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // For @ConfigurationProperties

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.5"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Configure Flyway
flyway {
    url = System.getenv("DB_URL") ?: "jdbc:postgresql://localhost:5432/confx"
    user = System.getenv("DB_USER") ?: "user"
    password = System.getenv("DB_PASSWORD") ?: "password"
    locations = ["classpath:db/migration"]
    baselineOnMigrate = true // Creates the schema history table if it doesn't exist, and baselines an existing schema.
} 